mdp

const int n = 1;


module secret_thread1

	h1  : [0..n]; 
        pc1 : [0..1];
        c1  : [0..2*n];
        e1  : [0..1];

        []  (h1>0)&(pc1=0)&(c1<2*n)        -> 1/2 : (h1'=h1-1)&(pc1'=1)  + 1/2 : (c1'=c1+1); //b(i) is true
        []  (h1>0)&(pc1=0)&(c1<2*n)        -> 1/2 : (h1'=h1-1)&(pc1'=0)  + 1/2 : (c1'=c1+1); //b(i) is false
        []  (pc1=1)&(c1<2*n)               -> 1/2 : (pc1'=0)           + 1/2 : (c1'=c1+1);
        []  (h1=0)&(pc1=0)&(c1<2*n)&(e1=0) -> 1/2 : (e1' =1)           + 1/2 : (c1'=c1+1);

        []  (h1>0)&(pc1=0)&(c1=2*n)        -> (h1'=h1-1)&(pc1'=1); 
        []  (h1>0)&(pc1=0)&(c1=2*n)        -> (h1'=h1-1)&(pc1'=0); 
        []  (pc1=1)&(c1=2*n)               -> (pc1'=0);          
        []  (h1=0)&(pc1=0)&(c1=2*n)&(e1=0) -> (e1' =1);
        []  (e1=1)                         -> true;


endmodule

module secret_thread2 = secret_thread1 [h1=h2, pc1=pc2, c1=c2, e1=e2 ] endmodule



init  (e1=0)&(h1=n)&(pc1=0)&(c1=0)&(e2=0)&(h2=n)&(pc2=0)&(c2=0)  endinit

label "counter1_0" = (c1=0)&(e1=1);
label "counter1_1" = (c1=1)&(e1=1);
label "counter1_2" = (c1=2)&(e1=1);
label "counter1_3" = (c1=3)&(e1=1);
label "counter1_4" = (c1=4)&(e1=1);
label "counter1_5" = (c1=5)&(e1=1);
label "counter1_6" = (c1=6)&(e1=1);
label "counter1_7" = (c1=7)&(e1=1);
label "counter1_8" = (c1=8)&(e1=1);
label "start1" = (e1=0)&(h1=n)&(pc1=0)&(c1=0);


label "counter2_0" = (c2=0)&(e2=1);
label "counter2_1" = (c2=1)&(e2=1);
label "counter2_2" = (c2=2)&(e2=1);
label "counter2_3" = (c2=3)&(e2=1);
label "counter2_4" = (c2=4)&(e2=1);
label "counter2_5" = (c2=5)&(e2=1);
label "counter2_6" = (c2=6)&(e2=1);
label "counter2_7" = (c2=7)&(e2=1);
label "counter2_8" = (c2=8)&(e2=1);
label "start2" = (e2=0)&(h2=n)&(pc2=0)&(c2=0);
